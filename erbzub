-- LocalScript in StarterPlayerScripts

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local Lighting = game:GetService("Lighting")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")

-- === Theme Presets ===
local themes = {
    Dark = {
        BackgroundColor = Color3.fromRGB(20, 20, 20),
        ButtonColor = Color3.fromRGB(30, 30, 30),
        ButtonHover = Color3.fromRGB(45, 45, 45),
        TextColor = Color3.new(1, 1, 1),
        ConfirmBackground = Color3.fromRGB(25, 25, 25),
        YesColor = Color3.fromRGB(40, 120, 40),
        NoColor = Color3.fromRGB(120, 40, 40),
    },
    Light = {
        BackgroundColor = Color3.fromRGB(240, 240, 240),
        ButtonColor = Color3.fromRGB(200, 200, 200),
        ButtonHover = Color3.fromRGB(180, 180, 180),
        TextColor = Color3.fromRGB(0, 0, 0),
        ConfirmBackground = Color3.fromRGB(220, 220, 220),
        YesColor = Color3.fromRGB(60, 180, 60),
        NoColor = Color3.fromRGB(200, 70, 70),
    },
    NeonBlue = {
        BackgroundColor = Color3.fromRGB(15, 15, 30),
        ButtonColor = Color3.fromRGB(20, 60, 100),
        ButtonHover = Color3.fromRGB(30, 90, 140),
        TextColor = Color3.fromRGB(180, 255, 255),
        ConfirmBackground = Color3.fromRGB(10, 30, 60),
        YesColor = Color3.fromRGB(0, 170, 255),
        NoColor = Color3.fromRGB(255, 85, 100),
    },
    Retro = {
        BackgroundColor = Color3.fromRGB(32, 18, 77),
        ButtonColor = Color3.fromRGB(255, 111, 105),
        ButtonHover = Color3.fromRGB(255, 171, 145),
        TextColor = Color3.fromRGB(255, 255, 240),
        ConfirmBackground = Color3.fromRGB(255, 160, 122),
        YesColor = Color3.fromRGB(240, 240, 120),
        NoColor = Color3.fromRGB(255, 100, 100),
    },
}

local currentThemeName = "NeonBlue"
local theme = themes[currentThemeName]

-- === Rounded Corners ===
local function roundify(instance, radius)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, radius)
    corner.Parent = instance
end

-- === Screen GUI ===
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "InjectorUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

-- === Blur Effect ===
local blur = Instance.new("BlurEffect")
blur.Size = 20
blur.Enabled = false
blur.Parent = Lighting

-- === Main Frame (Scrolling) ===
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 400, 0, 220)
mainFrame.Position = UDim2.new(0.5, -200, 0.5, -110)
mainFrame.BackgroundColor3 = theme.BackgroundColor
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Parent = screenGui
roundify(mainFrame, 8)

-- === Scrolling Frame ===
local scrollFrame = Instance.new("ScrollingFrame")
scrollFrame.Size = UDim2.new(1, 0, 1, 0)  -- Full height and width of the main frame
scrollFrame.Position = UDim2.new(0, 0, 0, 0)
scrollFrame.BackgroundTransparency = 1
scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 500)  -- Adjusted to make scrolling work
scrollFrame.ScrollBarThickness = 6
scrollFrame.Parent = mainFrame

-- === Inject Infinite Yield Button ===
local injectButton = Instance.new("TextButton")
injectButton.Size = UDim2.new(1, -20, 0, 50)
injectButton.Position = UDim2.new(0, 10, 0, 30)
injectButton.Text = "Inject Infinite Yield"
injectButton.BackgroundColor3 = theme.ButtonColor
injectButton.TextColor3 = theme.TextColor
injectButton.Font = Enum.Font.SourceSans
injectButton.TextSize = 22
injectButton.AutoButtonColor = false
injectButton.Parent = scrollFrame
roundify(injectButton, 6)

-- === Emotes Gui Button ===
local emotesButton = Instance.new("TextButton")
emotesButton.Size = UDim2.new(1, -20, 0, 50)
emotesButton.Position = UDim2.new(0, 10, 0, 90)
emotesButton.Text = "Emotes Gui"
emotesButton.BackgroundColor3 = theme.ButtonColor
emotesButton.TextColor3 = theme.TextColor
emotesButton.Font = Enum.Font.SourceSans
emotesButton.TextSize = 22
emotesButton.AutoButtonColor = false
emotesButton.Parent = scrollFrame
roundify(emotesButton, 6)

-- === AntiVoid Switch ===
local antiVoidSwitch = Instance.new("TextButton")
antiVoidSwitch.Size = UDim2.new(1, -20, 0, 40)
antiVoidSwitch.Position = UDim2.new(0, 10, 0, 150)
antiVoidSwitch.Text = "AntiVoid: OFF"
antiVoidSwitch.BackgroundColor3 = theme.ButtonColor
antiVoidSwitch.TextColor3 = theme.TextColor
antiVoidSwitch.Font = Enum.Font.SourceSans
antiVoidSwitch.TextSize = 20
antiVoidSwitch.AutoButtonColor = false
antiVoidSwitch.Parent = scrollFrame
roundify(antiVoidSwitch, 6)

-- === Time of Day Cycle Button ===
local timeCycleButton = Instance.new("TextButton")
timeCycleButton.Size = UDim2.new(1, -20, 0, 40)
timeCycleButton.Position = UDim2.new(0, 10, 0, 200)
timeCycleButton.Text = "Cycle Time of Day"
timeCycleButton.BackgroundColor3 = theme.ButtonColor
timeCycleButton.TextColor3 = theme.TextColor
timeCycleButton.Font = Enum.Font.SourceSans
timeCycleButton.TextSize = 20
timeCycleButton.AutoButtonColor = false
timeCycleButton.Parent = scrollFrame
roundify(timeCycleButton, 6)

-- List of time cycles in terms of "ClockTime" (24-hour format)
local timesOfDay = {0, 6, 12, 18}  -- Represents Midnight, Morning, Afternoon, Evening
local currentTimeIndex = 1

-- Function to cycle the time of day
local function cycleTimeOfDay()
    -- Update the time in Lighting
    game.Lighting.ClockTime = timesOfDay[currentTimeIndex]
    
    -- Update the button text to reflect the current time
    local timeNames = {"Midnight", "Morning", "Afternoon", "Evening"}
    timeCycleButton.Text = "Time: " .. timeNames[currentTimeIndex]
    
    -- Move to the next time of day in the cycle
    currentTimeIndex = currentTimeIndex + 1
    if currentTimeIndex > #timesOfDay then
        currentTimeIndex = 1
    end
end

-- Connect the button to cycle the time of day when clicked
timeCycleButton.MouseButton1Click:Connect(cycleTimeOfDay)

-- === Confirmation Frame ===
local confirmFrame = Instance.new("Frame")
confirmFrame.Size = UDim2.new(0, 250, 0, 130)
confirmFrame.Position = UDim2.new(0.5, -125, 0.5, -65)
confirmFrame.BackgroundColor3 = theme.ConfirmBackground
confirmFrame.BorderSizePixel = 0
confirmFrame.Visible = false
confirmFrame.AnchorPoint = Vector2.new(0.5, 0.5)
confirmFrame.Active = true
confirmFrame.Draggable = true
confirmFrame.Parent = screenGui
roundify(confirmFrame, 8)

-- === Confirmation Text ===
local confirmText = Instance.new("TextLabel")
confirmText.Size = UDim2.new(1, -20, 0, 50)
confirmText.Position = UDim2.new(0, 10, 0, 10)
confirmText.Text = "Are you sure you want to inject?"
confirmText.TextColor3 = theme.TextColor
confirmText.Font = Enum.Font.SourceSans
confirmText.TextSize = 20
confirmText.BackgroundTransparency = 1
confirmText.Parent = confirmFrame

-- === Button Creator ===
local function createButton(text, pos, colorKey)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0.4, 0, 0, 40)
    btn.Position = pos
    btn.Text = text
    btn.BackgroundColor3 = theme[colorKey]
    btn.TextColor3 = theme.TextColor
    btn.Font = Enum.Font.SourceSans
    btn.TextSize = 20
    btn.AutoButtonColor = false
    btn.Parent = confirmFrame
    roundify(btn, 6)

    btn.MouseEnter:Connect(function()
        TweenService:Create(btn, TweenInfo.new(0.2), {
            BackgroundColor3 = theme.ButtonHover
        }):Play()
    end)

    btn.MouseLeave:Connect(function()
        TweenService:Create(btn, TweenInfo.new(0.2), {
            BackgroundColor3 = theme[colorKey]
        }):Play()
    end)

    return btn
end

local yesButton = createButton("Yes", UDim2.new(0.1, 0, 0.6, 0), "YesColor")
local cancelButton = createButton("Cancel", UDim2.new(0.5, 10, 0.6, 0), "NoColor")

-- === Animations ===
local minimized = false

local function minimize()
    minimized = true
    TweenService:Create(mainFrame, TweenInfo.new(0.3), {
        Size = UDim2.new(0, 0, 0, 0),
        BackgroundTransparency = 1
    }):Play()
    task.wait(0.3)
    mainFrame.Visible = false
end

local function maximize()
    mainFrame.Visible = true
    mainFrame.Size = UDim2.new(0, 0, 0, 0)
    mainFrame.BackgroundTransparency = 1
    TweenService:Create(mainFrame, TweenInfo.new(0.3), {
        Size = UDim2.new(0, 400, 0, 220),
        BackgroundTransparency = 0
    }):Play()
    minimized = false
end

UserInputService.InputBegan:Connect(function(input, gp)
    if not gp and input.KeyCode == Enum.KeyCode.LeftControl then
        if minimized then maximize() else minimize() end
    end
end)

local function showConfirm()
    blur.Enabled = true
    confirmFrame.Size = UDim2.new(0, 0, 0, 0)
    confirmFrame.Visible = true
    confirmFrame.BackgroundTransparency = 1
    TweenService:Create(confirmFrame, TweenInfo.new(0.2), {
        Size = UDim2.new(0, 250, 0, 130),
        BackgroundTransparency = 0
    }):Play()
end

local function hideConfirm()
    local t = TweenService:Create(confirmFrame, TweenInfo.new(0.2), {
        Size = UDim2.new(0, 0, 0, 0),
        BackgroundTransparency = 1
    })
    t:Play()
    t.Completed:Connect(function()
        confirmFrame.Visible = false
        blur.Enabled = false
    end)
end

-- Connecting buttons
yesButton.MouseButton1Click:Connect(function()
    -- Perform Injection
    hideConfirm()
end)

cancelButton.MouseButton1Click:Connect(hideConfirm)

-- === Button Hover Effects ===
injectButton.MouseEnter:Connect(function()
    TweenService:Create(injectButton, TweenInfo.new(0.2), {
        BackgroundColor3 = theme.ButtonHover
    }):Play()
end)

injectButton.MouseLeave:Connect(function()
    TweenService:Create(injectButton, TweenInfo.new(0.2), {
        BackgroundColor3 = theme.ButtonColor
    }):Play()
end)
