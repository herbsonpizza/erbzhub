-- LocalScript in StarterPlayerScripts

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local Lighting = game:GetService("Lighting")
local RunService = game:GetService("RunService")
local Camera = game:GetService("Workspace").CurrentCamera

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")

-- === Theme Presets ===
local themes = {
    Dark = {
        BackgroundColor = Color3.fromRGB(20, 20, 20),
        ButtonColor = Color3.fromRGB(30, 30, 30),
        ButtonHover = Color3.fromRGB(45, 45, 45),
        TextColor = Color3.new(1, 1, 1),
        ConfirmBackground = Color3.fromRGB(25, 25, 25),
        YesColor = Color3.fromRGB(40, 120, 40),
        NoColor = Color3.fromRGB(120, 40, 40),
    },
    Light = {
        BackgroundColor = Color3.fromRGB(240, 240, 240),
        ButtonColor = Color3.fromRGB(200, 200, 200),
        ButtonHover = Color3.fromRGB(180, 180, 180),
        TextColor = Color3.fromRGB(0, 0, 0),
        ConfirmBackground = Color3.fromRGB(220, 220, 220),
        YesColor = Color3.fromRGB(60, 180, 60),
        NoColor = Color3.fromRGB(200, 70, 70),
    },
    NeonBlue = {
        BackgroundColor = Color3.fromRGB(15, 15, 30),
        ButtonColor = Color3.fromRGB(20, 60, 100),
        ButtonHover = Color3.fromRGB(30, 90, 140),
        TextColor = Color3.fromRGB(180, 255, 255),
        ConfirmBackground = Color3.fromRGB(10, 30, 60),
        YesColor = Color3.fromRGB(0, 170, 255),
        NoColor = Color3.fromRGB(255, 85, 100),
    },
    Retro = {
        BackgroundColor = Color3.fromRGB(32, 18, 77),
        ButtonColor = Color3.fromRGB(255, 111, 105),
        ButtonHover = Color3.fromRGB(255, 171, 145),
        TextColor = Color3.fromRGB(255, 255, 240),
        ConfirmBackground = Color3.fromRGB(255, 160, 122),
        YesColor = Color3.fromRGB(240, 240, 120),
        NoColor = Color3.fromRGB(255, 100, 100),
    },
}

local currentThemeName = "NeonBlue"
local theme = themes[currentThemeName]

-- === Rounded Corners ===
local function roundify(instance, radius)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, radius)
    corner.Parent = instance
end

-- === Screen GUI ===
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "InjectorUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

-- === Blur Effect ===
local blur = Instance.new("BlurEffect")
blur.Size = 20
blur.Enabled = false
blur.Parent = Lighting

-- === Main Frame ===
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 400, 0, 220)  -- Increased size (wider and taller)
mainFrame.Position = UDim2.new(0.5, -200, 0.5, -110)  -- Centered with the new size
mainFrame.BackgroundColor3 = theme.BackgroundColor
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Parent = screenGui
roundify(mainFrame, 8)

-- === Inject Button ===
local injectButton = Instance.new("TextButton")
injectButton.Size = UDim2.new(1, -20, 0, 50)  -- Increased button size
injectButton.Position = UDim2.new(0, 10, 0, 30)  -- Adjusted position
injectButton.Text = "Inject Infinite Yield"
injectButton.BackgroundColor3 = theme.ButtonColor
injectButton.TextColor3 = theme.TextColor
injectButton.Font = Enum.Font.SourceSans
injectButton.TextSize = 22  -- Increased text size
injectButton.AutoButtonColor = false
injectButton.Parent = mainFrame
roundify(injectButton, 6)

-- === AntiVoid Switch ===
local antiVoidSwitch = Instance.new("TextButton")
antiVoidSwitch.Size = UDim2.new(1, -20, 0, 40)  -- Increased button size
antiVoidSwitch.Position = UDim2.new(0, 10, 0, 90)  -- Adjusted position
antiVoidSwitch.Text = "AntiVoid: OFF"
antiVoidSwitch.BackgroundColor3 = theme.ButtonColor
antiVoidSwitch.TextColor3 = theme.TextColor
antiVoidSwitch.Font = Enum.Font.SourceSans
antiVoidSwitch.TextSize = 20  -- Increased text size
antiVoidSwitch.AutoButtonColor = false
antiVoidSwitch.Parent = mainFrame
roundify(antiVoidSwitch, 6)

-- === FreeCam Button ===
local freeCamButton = Instance.new("TextButton")
freeCamButton.Size = UDim2.new(1, -20, 0, 40)
freeCamButton.Position = UDim2.new(0, 10, 0, 150)  -- Adjusted position
freeCamButton.Text = "FreeCam: OFF"
freeCamButton.BackgroundColor3 = theme.ButtonColor
freeCamButton.TextColor3 = theme.TextColor
freeCamButton.Font = Enum.Font.SourceSans
freeCamButton.TextSize = 20
freeCamButton.AutoButtonColor = false
freeCamButton.Parent = mainFrame
roundify(freeCamButton, 6)

-- === FreeCam Variables ===
local freeCamEnabled = false
local freeCamCamera = Instance.new("Camera") -- Create a new camera for freecam
local originalCamera = Camera
local cameraOffset = Vector3.new(0, 5, 10) -- Offset from the player for freecam, adjust as necessary
local moveSpeed = 50 -- Speed at which the freecam moves

-- === FreeCam Toggle Functionality ===
local function toggleFreeCam()
    freeCamEnabled = not freeCamEnabled
    if freeCamEnabled then
        Camera.CameraType = Enum.CameraType.Scriptable -- Switch to freecam
        Camera.CFrame = character.HumanoidRootPart.CFrame -- Set camera to playerâ€™s current position
        Camera.FieldOfView = 70 -- Optionally change the FOV for freecam
        
        freeCamButton.Text = "FreeCam: ON" -- Change button text
        
        -- Disable character controls (e.g., stop movement)
        player.Character.HumanoidRootPart.Anchored = true
    else
        Camera.CameraType = Enum.CameraType.Custom -- Reset to normal camera mode
        Camera.CFrame = originalCamera.CFrame -- Restore original camera position
        freeCamButton.Text = "FreeCam: OFF" -- Change button text
        
        -- Re-enable character controls
        player.Character.HumanoidRootPart.Anchored = false
    end
end

-- Toggle FreeCam on button click
freeCamButton.MouseButton1Click:Connect(toggleFreeCam)

-- === FreeCam Movement ===
local lastPosition = Camera.CFrame.Position
local movementDirection = Vector3.new(0, 0, 0)

RunService.RenderStepped:Connect(function(_, dt)
    if freeCamEnabled then
        -- Get movement input (WASD)
        movementDirection = Vector3.new(
            (UserInputService:IsKeyDown(Enum.KeyCode.W) and 1 or 0) - (UserInputService:IsKeyDown(Enum.KeyCode.S) and 1 or 0),
            (UserInputService:IsKeyDown(Enum.KeyCode.Space) and 1 or 0) - (UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) and 1 or 0),
            (UserInputService:IsKeyDown(Enum.KeyCode.A) and 1 or 0) - (UserInputService:IsKeyDown(Enum.KeyCode.D) and 1 or 0)
        ).Unit

        -- Move camera based on input
        local newPosition = lastPosition + movementDirection * moveSpeed * dt
        Camera.CFrame = CFrame.new(newPosition, Camera.CFrame.Position + Camera.CFrame.LookVector)
        
        -- Update the last position
        lastPosition = Camera.CFrame.Position
    end
end)

-- === FreeCam Mouse Look ===
UserInputService.MouseMovement:Connect(function(input)
    if freeCamEnabled then
        local delta = input.Delta
        Camera.CFrame = Camera.CFrame * CFrame.Angles(0, -delta.X * 0.003, 0) * CFrame.Angles(-delta.Y * 0.003, 0, 0)
    end
end)

-- === Confirmation Frame ===
local confirmFrame = Instance.new("Frame")
confirmFrame.Size = UDim2.new(0, 250, 0, 130)  -- Increased confirmation frame size
confirmFrame.Position = UDim2.new(0.5, -125, 0.5, -65)  -- Centered with the new size
confirmFrame.BackgroundColor3 = theme.ConfirmBackground
confirmFrame.BorderSizePixel = 0
confirmFrame.Visible = false
confirmFrame.AnchorPoint = Vector2.new(0.5, 0.5)
confirmFrame.Active = true
confirmFrame.Draggable = true
confirmFrame.Parent = screenGui
roundify(confirmFrame, 8)

-- === Confirmation Text ===
local confirmText = Instance.new("TextLabel")
confirmText.Size = UDim2.new(1, -20, 0, 50)  -- Increased text size
confirmText.Position = UDim2.new(0, 10, 0, 10)
confirmText.Text = "Are you sure you want to inject?"
confirmText.TextColor3 = theme.TextColor
confirmText.Font = Enum.Font.SourceSans
confirmText.TextSize = 20  -- Increased text size
confirmText.BackgroundTransparency = 1
confirmText.Parent = confirmFrame

-- === Button Creator ===
local function createButton(text, pos, colorKey)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0.4, 0, 0, 40)  -- Increased button size
    btn.Position = pos
    btn.Text = text
    btn.BackgroundColor3 = theme[colorKey]
    btn.TextColor3 = theme.TextColor
    btn.Font = Enum.Font.SourceSans
    btn.TextSize = 20  -- Increased text size
    btn.AutoButtonColor = false
    btn.Parent = confirmFrame
    roundify(btn, 6)

    btn.MouseEnter:Connect(function()
        TweenService:Create(btn, TweenInfo.new(0.2), {
            BackgroundColor3 = theme.ButtonHover
        }):Play()
    end)

    btn.MouseLeave:Connect(function()
        TweenService:Create(btn, TweenInfo.new(0.2), {
            BackgroundColor3 = theme[colorKey]
        }):Play()
    end)

    return btn
end

local yesButton = createButton("Yes", UDim2.new(0.1, 0, 0.6, 0), "YesColor")
local cancelButton = createButton("Cancel", UDim2.new(0.5, 10, 0.6, 0), "NoColor")

-- === Animations ===
local minimized = false

local function minimize()
    minimized = true
    TweenService:Create(mainFrame, TweenInfo.new(0.3), {
        Size = UDim2.new(0, 0, 0, 0),
        BackgroundTransparency = 1
    }):Play()
    task.wait(0.3)
    mainFrame.Visible = false
end

local function maximize()
    mainFrame.Visible = true
    mainFrame.Size = UDim2.new(0, 0, 0, 0)
    mainFrame.BackgroundTransparency = 1
    TweenService:Create(mainFrame, TweenInfo.new(0.3), {
        Size = UDim2.new(0, 400, 0, 220),
        BackgroundTransparency = 0
    }):Play()
    minimized = false
end

UserInputService.InputBegan:Connect(function(input, gp)
    if not gp and input.KeyCode == Enum.KeyCode.LeftControl then
        if minimized then maximize() else minimize() end
    end
end)

local function showConfirm()
    blur.Enabled = true
    confirmFrame.Size = UDim2.new(0, 0, 0, 0)
    confirmFrame.Visible = true
    confirmFrame.BackgroundTransparency = 1
    TweenService:Create(confirmFrame, TweenInfo.new(0.2), {
        Size = UDim2.new(0, 250, 0, 130),
        BackgroundTransparency = 0
    }):Play()
end

local function hideConfirm()
    local t = TweenService:Create(confirmFrame, TweenInfo.new(0.2), {
        Size = UDim2.new(0, 0, 0, 0),
        BackgroundTransparency = 1
    })
    t:Play()
    t.Completed:Connect(function()
        confirmFrame.Visible = false
        blur.Enabled = false
    end)
end

injectButton.MouseButton1Click:Connect(showConfirm)

yesButton.MouseButton1Click:Connect(function()
    hideConfirm()
    pcall(function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
    end)
    injectButton.Text = "Injected!"
end)

cancelButton.MouseButton1Click:Connect(hideConfirm)

-- === AntiVoid Functionality ===
local antiVoidEnabled = false
local antiVoidPlatform = nil
local platformHeight = -0.5  -- Set to Y = -0.5

local function createAntiVoidPlatform()
    -- Create a massive, completely invisible platform at the fixed height (Y = -0.5)
    antiVoidPlatform = Instance.new("Part")
    antiVoidPlatform.Size = Vector3.new(1000, 1, 1000)
    antiVoidPlatform.Position = Vector3.new(0, platformHeight, 0)
    antiVoidPlatform.Anchored = true
    antiVoidPlatform.CanCollide = false
    antiVoidPlatform.Parent = game.Workspace
end

antiVoidSwitch.MouseButton1Click:Connect(function()
    antiVoidEnabled = not antiVoidEnabled
    antiVoidSwitch.Text = antiVoidEnabled and "AntiVoid: ON" or "AntiVoid: OFF"

    if antiVoidEnabled then
        createAntiVoidPlatform()
    else
        if antiVoidPlatform then
            antiVoidPlatform:Destroy()
        end
    end
end)
