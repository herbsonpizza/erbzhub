local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local Lighting = game:GetService("Lighting")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")

-- === Theme Presets ===
local themes = {
    Dark = {
        BackgroundColor = Color3.fromRGB(20, 20, 20),
        ButtonColor = Color3.fromRGB(30, 30, 30),
        ButtonHover = Color3.fromRGB(45, 45, 45),
        TextColor = Color3.new(1, 1, 1),
        ConfirmBackground = Color3.fromRGB(25, 25, 25),
        YesColor = Color3.fromRGB(40, 120, 40),
        NoColor = Color3.fromRGB(120, 40, 40),
    },
    Light = {
        BackgroundColor = Color3.fromRGB(240, 240, 240),
        ButtonColor = Color3.fromRGB(200, 200, 200),
        ButtonHover = Color3.fromRGB(180, 180, 180),
        TextColor = Color3.fromRGB(0, 0, 0),
        ConfirmBackground = Color3.fromRGB(220, 220, 220),
        YesColor = Color3.fromRGB(60, 180, 60),
        NoColor = Color3.fromRGB(200, 70, 70),
    },
    NeonBlue = {
        BackgroundColor = Color3.fromRGB(15, 15, 30),
        ButtonColor = Color3.fromRGB(20, 60, 100),
        ButtonHover = Color3.fromRGB(30, 90, 140),
        TextColor = Color3.fromRGB(180, 255, 255),
        ConfirmBackground = Color3.fromRGB(10, 30, 60),
        YesColor = Color3.fromRGB(0, 170, 255),
        NoColor = Color3.fromRGB(255, 85, 100),
    },
    Retro = {
        BackgroundColor = Color3.fromRGB(32, 18, 77),
        ButtonColor = Color3.fromRGB(255, 111, 105),
        ButtonHover = Color3.fromRGB(255, 171, 145),
        TextColor = Color3.fromRGB(255, 255, 240),
        ConfirmBackground = Color3.fromRGB(255, 160, 122),
        YesColor = Color3.fromRGB(240, 240, 120),
        NoColor = Color3.fromRGB(255, 100, 100),
    },
}

local currentThemeName = "NeonBlue"
local theme = themes[currentThemeName]

-- === Rounded Corners ===
local function roundify(instance, radius)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, radius)
    corner.Parent = instance
end

-- === Screen GUI ===
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "InjectorUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

-- === Blur Effect ===
local blur = Instance.new("BlurEffect")
blur.Size = 20
blur.Enabled = false
blur.Parent = Lighting

-- === Main Frame (Scrolling) ===
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 400, 0, 220)
mainFrame.Position = UDim2.new(0.5, -200, 0.5, -110)
mainFrame.BackgroundColor3 = theme.BackgroundColor
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Parent = screenGui
roundify(mainFrame, 8)

-- === Scrolling Frame ===
local scrollFrame = Instance.new("ScrollingFrame")
scrollFrame.Size = UDim2.new(1, 0, 1, 0)  -- Full height and width of the main frame
scrollFrame.Position = UDim2.new(0, 0, 0, 0)
scrollFrame.BackgroundTransparency = 1
scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 500)  -- Adjusted to make scrolling work
scrollFrame.ScrollBarThickness = 6
scrollFrame.Parent = mainFrame

-- === Inject Infinite Yield Button ===
local injectButton = Instance.new("TextButton")
injectButton.Size = UDim2.new(1, -20, 0, 50)
injectButton.Position = UDim2.new(0, 10, 0, 30)
injectButton.Text = "Inject Infinite Yield"
injectButton.BackgroundColor3 = theme.ButtonColor
injectButton.TextColor3 = theme.TextColor
injectButton.Font = Enum.Font.SourceSans
injectButton.TextSize = 22
injectButton.AutoButtonColor = false
injectButton.Parent = scrollFrame
roundify(injectButton, 6)

-- === Emotes Gui Button ===
local emotesButton = Instance.new("TextButton")
emotesButton.Size = UDim2.new(1, -20, 0, 50)
emotesButton.Position = UDim2.new(0, 10, 0, 90)
emotesButton.Text = "Emotes Gui"
emotesButton.BackgroundColor3 = theme.ButtonColor
emotesButton.TextColor3 = theme.TextColor
emotesButton.Font = Enum.Font.SourceSans
emotesButton.TextSize = 22
emotesButton.AutoButtonColor = false
emotesButton.Parent = scrollFrame
roundify(emotesButton, 6)

-- === AntiVoid Switch ===
local antiVoidSwitch = Instance.new("TextButton")
antiVoidSwitch.Size = UDim2.new(1, -20, 0, 40)
antiVoidSwitch.Position = UDim2.new(0, 10, 0, 150)
antiVoidSwitch.Text = "AntiVoid: OFF"
antiVoidSwitch.BackgroundColor3 = theme.ButtonColor
antiVoidSwitch.TextColor3 = theme.TextColor
antiVoidSwitch.Font = Enum.Font.SourceSans
antiVoidSwitch.TextSize = 20
antiVoidSwitch.AutoButtonColor = false
antiVoidSwitch.Parent = scrollFrame
roundify(antiVoidSwitch, 6)

-- === Confirmation Frame ===
local confirmFrame = Instance.new("Frame")
confirmFrame.Size = UDim2.new(0, 250, 0, 130)
confirmFrame.Position = UDim2.new(0.5, -125, 0.5, -65)
confirmFrame.BackgroundColor3 = theme.ConfirmBackground
confirmFrame.BorderSizePixel = 0
confirmFrame.Visible = false
confirmFrame.AnchorPoint = Vector2.new(0.5, 0.5)
confirmFrame.Active = true
confirmFrame.Draggable = true
confirmFrame.Parent = screenGui
roundify(confirmFrame, 8)

-- === Confirmation Text ===
local confirmText = Instance.new("TextLabel")
confirmText.Size = UDim2.new(1, -20, 0, 50)
confirmText.Position = UDim2.new(0, 10, 0, 10)
confirmText.Text = "Are you sure you want to inject?"
confirmText.TextColor3 = theme.TextColor
confirmText.Font = Enum.Font.SourceSans
confirmText.TextSize = 20
confirmText.BackgroundTransparency = 1
confirmText.Parent = confirmFrame

-- === Button Creator ===
local function createButton(text, pos, colorKey)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0.4, 0, 0, 40)
    btn.Position = pos
    btn.Text = text
    btn.BackgroundColor3 = theme[colorKey]
    btn.TextColor3 = theme.TextColor
    btn.Font = Enum.Font.SourceSans
    btn.TextSize = 20
    btn.AutoButtonColor = false
    btn.Parent = confirmFrame
    roundify(btn, 6)

    btn.MouseEnter:Connect(function()
        TweenService:Create(btn, TweenInfo.new(0.2), {
            BackgroundColor3 = theme.ButtonHover
        }):Play()
    end)

    btn.MouseLeave:Connect(function()
        TweenService:Create(btn, TweenInfo.new(0.2), {
            BackgroundColor3 = theme[colorKey]
        }):Play()
    end)

    return btn
end

local yesButton = createButton("Yes", UDim2.new(0.1, 0, 0.6, 0), "YesColor")
local cancelButton = createButton("Cancel", UDim2.new(0.5, 10, 0.6, 0), "NoColor")

-- === Animations ===
local minimized = false

local function minimize()
    minimized = true
    TweenService:Create(mainFrame, TweenInfo.new(0.3), {
        Size = UDim2.new(0, 0, 0, 0),
        BackgroundTransparency = 1
    }):Play()
    task.wait(0.3)
    mainFrame.Visible = false
end

local function maximize()
    mainFrame.Visible = true
    mainFrame.Size = UDim2.new(0, 0, 0, 0)
    mainFrame.BackgroundTransparency = 1
    TweenService:Create(mainFrame, TweenInfo.new(0.3), {
        Size = UDim2.new(0, 400, 0, 220),
        BackgroundTransparency = 0
    }):Play()
    minimized = false
end

UserInputService.InputBegan:Connect(function(input, gp)
    if not gp and input.KeyCode == Enum.KeyCode.LeftControl then
        if minimized then maximize() else minimize() end
    end
end)

local function showConfirm()
    blur.Enabled = true
    confirmFrame.Size = UDim2.new(0, 0, 0, 0)
    confirmFrame.Visible = true
    confirmFrame.BackgroundTransparency = 1
    TweenService:Create(confirmFrame, TweenInfo.new(0.2), {
        Size = UDim2.new(0, 250, 0, 130),
        BackgroundTransparency = 0
    }):Play()
end

local function hideConfirm()
    local t = TweenService:Create(confirmFrame, TweenInfo.new(0.2), {
        Size = UDim2.new(0, 0, 0, 0),
        BackgroundTransparency = 1
    })
    t:Play()
    t.Completed:Connect(function()
        confirmFrame.Visible = false
        blur.Enabled = false
    end)
end

injectButton.MouseButton1Click:Connect(showConfirm)

yesButton.MouseButton1Click:Connect(function()
    hideConfirm()
    pcall(function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
    end)
    injectButton.Text = "Injected!"
end)

cancelButton.MouseButton1Click:Connect(hideConfirm)

-- === AntiVoid Functionality (Set to Y = -0.5) ===
local antiVoidEnabled = false
local antiVoidPlatform = nil
local platformHeight = -0.5

local function createAntiVoidPlatform()
    antiVoidPlatform = Instance.new("Part")
    antiVoidPlatform.Size = Vector3.new(1000, 1, 1000)
    antiVoidPlatform.Position = Vector3.new(0, platformHeight, 0)
    antiVoidPlatform.Anchored = true
    antiVoidPlatform.CanCollide = true
    antiVoidPlatform.Transparency = 1
    antiVoidPlatform.Parent = workspace
end

local function removeAntiVoidPlatform()
    if antiVoidPlatform then
        antiVoidPlatform:Destroy()
        antiVoidPlatform = nil
    end
end

antiVoidSwitch.MouseButton1Click:Connect(function()
    antiVoidEnabled = not antiVoidEnabled
    if antiVoidEnabled then
        antiVoidSwitch.Text = "AntiVoid: ON"
        createAntiVoidPlatform()
    else
        antiVoidSwitch.Text = "AntiVoid: OFF"
        removeAntiVoidPlatform()
    end
end)

-- === Emotes Gui Button ===
emotesButton.MouseButton1Click:Connect(function()
    pcall(function()
        loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/Gi7331/scripts/main/Emote.lua"))()
    end)
    emotesButton.Text = "Emotes Injected!"
end)

-- === Theme Switch Button ===
local themeNames = {}
for name, _ in pairs(themes) do
    table.insert(themeNames, name)
end

local currentThemeIndex = table.find(themeNames, currentThemeName) or 1

local themeSwitchButton = Instance.new("TextButton")
themeSwitchButton.Size = UDim2.new(1, -20, 0, 40)
themeSwitchButton.Position = UDim2.new(0, 10, 0, 200)
themeSwitchButton.Text = "Theme: " .. currentThemeName
themeSwitchButton.BackgroundColor3 = theme.ButtonColor
themeSwitchButton.TextColor3 = theme.TextColor
themeSwitchButton.Font = Enum.Font.SourceSans
themeSwitchButton.TextSize = 20
themeSwitchButton.AutoButtonColor = false
themeSwitchButton.Parent = scrollFrame
roundify(themeSwitchButton, 6)

local function applyTheme(newTheme)
    theme = newTheme

    mainFrame.BackgroundColor3 = theme.BackgroundColor
    injectButton.BackgroundColor3 = theme.ButtonColor
    injectButton.TextColor3 = theme.TextColor
    emotesButton.BackgroundColor3 = theme.ButtonColor
    emotesButton.TextColor3 = theme.TextColor
    antiVoidSwitch.BackgroundColor3 = theme.ButtonColor
    antiVoidSwitch.TextColor3 = theme.TextColor
    themeSwitchButton.BackgroundColor3 = theme.ButtonColor
    themeSwitchButton.TextColor3 = theme.TextColor

    confirmFrame.BackgroundColor3 = theme.ConfirmBackground
    confirmText.TextColor3 = theme.TextColor
    yesButton.BackgroundColor3 = theme.YesColor
    yesButton.TextColor3 = theme.TextColor
    cancelButton.BackgroundColor3 = theme.NoColor
    cancelButton.TextColor3 = theme.TextColor
end

themeSwitchButton.MouseButton1Click:Connect(function()
    currentThemeIndex += 1
    if currentThemeIndex > #themeNames then
        currentThemeIndex = 1
    end
    currentThemeName = themeNames[currentThemeIndex]
    themeSwitchButton.Text = "Theme: " .. currentThemeName
    applyTheme(themes[currentThemeName])
end)

-- === Unsuspend VC Button ===
local unsuspendVCButton = Instance.new("TextButton")
unsuspendVCButton.Size = UDim2.new(1, -20, 0, 40)
unsuspendVCButton.Position = UDim2.new(0, 10, 0, 250)
unsuspendVCButton.Text = "Unsuspend VC"
unsuspendVCButton.BackgroundColor3 = theme.ButtonColor
unsuspendVCButton.TextColor3 = theme.TextColor
unsuspendVCButton.Font = Enum.Font.SourceSans
unsuspendVCButton.TextSize = 20
unsuspendVCButton.AutoButtonColor = false
unsuspendVCButton.Parent = scrollFrame
roundify(unsuspendVCButton, 6)

-- === Unsuspend VC Button Functionality ===
unsuspendVCButton.MouseButton1Click:Connect(function()
    pcall(function()
        game:GetService("VoiceChatService"):joinVoice()
    end)
    unsuspendVCButton.Text = "VC Unsuspended!"
end)

-- === FOV Input Section ===
local fovInputFrame = Instance.new("Frame")
fovInputFrame.Size = UDim2.new(1, -20, 0, 100)
fovInputFrame.Position = UDim2.new(0, 10, 0, 300)
fovInputFrame.BackgroundColor3 = theme.BackgroundColor
fovInputFrame.BorderSizePixel = 0
fovInputFrame.Parent = scrollFrame
roundify(fovInputFrame, 6)

-- === FOV Input TextBox ===
local fovInputBox = Instance.new("TextBox")
fovInputBox.Size = UDim2.new(1, -20, 0, 40)
fovInputBox.Position = UDim2.new(0, 10, 0, 10)
fovInputBox.PlaceholderText = "Enter FOV Value (60-120)"
fovInputBox.BackgroundColor3 = theme.ButtonColor
fovInputBox.TextColor3 = theme.TextColor
fovInputBox.Font = Enum.Font.SourceSans
fovInputBox.TextSize = 20
fovInputBox.ClearTextOnFocus = false
fovInputBox.Parent = fovInputFrame
roundify(fovInputBox, 6)

-- === FOV Apply Button ===
local applyFovButton = Instance.new("TextButton")
applyFovButton.Size = UDim2.new(1, -20, 0, 40)
applyFovButton.Position = UDim2.new(0, 10, 0, 60)
applyFovButton.Text = "Apply FOV"
applyFovButton.BackgroundColor3 = theme.ButtonColor
applyFovButton.TextColor3 = theme.TextColor
applyFovButton.Font = Enum.Font.SourceSans
applyFovButton.TextSize = 20
applyFovButton.AutoButtonColor = false
applyFovButton.Parent = fovInputFrame
roundify(applyFovButton, 6)

-- === Adjust Canvas Size for Scrolling ===
scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 500 + fovInputFrame.Size.Y.Offset) -- Adjust canvas size to fit the new section

-- === FOV Apply Functionality ===
applyFovButton.MouseButton1Click:Connect(function()
    local fovValue = tonumber(fovInputBox.Text)
    if fovValue and fovValue >= 60 and fovValue <= 120 then
        game.Workspace.CurrentCamera.FieldOfView = fovValue
        applyFovButton.Text = "FOV Applied!"
    else
        applyFovButton.Text = "Invalid FOV (60-120)"
        wait(1)
        applyFovButton.Text = "Apply FOV"
    end
end)
